[workspace.package]
name = "prism"
version = "0.1.0"
authors = [
  "Sebastian Pusch <sebastian@deltadevs.xyz>",
  "Ryan Ford <ryan@deltadevs.xyz>",
  "Jonas Pusch <jonas@deltadevs.xyz>",
]
edition = "2024"
description = "prism is the first trust-minimized key-transparency solution, allowing for automatic verification of service providers via light clients. Powered by Celestia."
homepage = "https://prism.deltadevs.xyz"
repository = "https://github.com/deltadevsde/prism"
license = "MIT"
keywords = ["crypto", "key-transparency"]
readme = "README.md"

[workspace]
default-members = [
  "crates/cli",
  "crates/client",
  "crates/tests",
  "crates/node_types/prover",
  "crates/node_types/lightclient",
  "crates/node_types/wasm-lightclient",
  "crates/node_types/uniffi-lightclient",
  "crates/common",
  "crates/errors",
  "crates/storage",
  "crates/da",
  "crates/serde",
  "crates/keys",
  "crates/tree",
  "crates/telemetry",
]

members = [
  "crates/cli",
  "crates/client",
  "crates/tests",
  "crates/node_types/prover",
  "crates/node_types/lightclient",
  "crates/node_types/wasm-lightclient",
  "crates/node_types/uniffi-lightclient",
  "crates/common",
  "crates/errors",
  "crates/zk/sp1",
  "crates/zk/sp1-script",
  "crates/storage",
  "crates/da",
  "crates/serde",
  "crates/keys",
  "crates/tree",
  "crates/telemetry",
]
resolver = "2"

[workspace.dependencies]
# serde
serde = { version = "1.0.151", features = ["derive"] }
serde_json = "1.0.79"
serde_bytes = "0.11.15"
base64 = "0.22.0"
bech32 = "0.11.0"
bincode = "1.3.3"
hex = "0.4.3"
pkcs8 = { version = "0.10.2", features = ["std", "pem"] }

# webserver
axum = "0.8"
tower-http = { version = "0.6", features = ["cors"] }
utoipa = { version = "5.3", features = ["axum_extras"] }
utoipa-swagger-ui = { version = "9.0", features = ["axum"] }
utoipa-axum = { version = "0.2.0" }

# webclient
reqwest = { version = "0.12", features = ["json"] }
url = { version = "2.5" }

# database
redis = "0.24.0"
rocksdb = { version = "0.21.0", features = ["multi-threaded-cf"] }
redb = "2.4.0"

# async
async-trait = "0.1.86"
futures = "0.3.31"
tokio = { version = "1.16.1", default-features = false }
tokio-util = "0.7"

# errors
thiserror = "2.0.12"
anyhow = "1.0.44"

# cli
keystore-rs = "0.3.1"
pretty_env_logger = "0.5.0"
clap = { version = "4.5.39", features = ["derive"] }
config = "0.14.0"
toml = "0.8.14"
dirs = "5.0.1"
dotenvy = "0.15.7"

# zk
rand = "0.8.5"
sp1-zkvm = { version = "4.2.0" }
sp1-sdk = { version = "4.2.0" }
sp1-verifier = { version = "4.2.0", default-features = false }

# curves
ed25519 = { version = "2.2.3", features = ["pem"] }
ed25519-consensus = "2.1.0"
k256 = { version = "0.13.4", features = ["ecdsa", "serde"] }
p256 = { version = "0.13.2", features = ["ecdsa", "serde"] }

# signatures
alloy-primitives = { version = "1.1.2", default-features = false, features = [
  "k256",
] }
ripemd = "0.1.3"

# celestia
celestia-rpc = "=0.9.1"
celestia-types = "=0.10.1"
lumina-node = "=0.9.1"

# p2p
libp2p = "0.54.1"

# misc
jmt = { git = "https://github.com/deltadevsde/jmt", branch = "rehashing-circuit", features = [
  "mocks",
] }
sha2 = "0.10.8"
tempfile = "3.14.0"
auto_impl = "1.2.0"
paste = "1.0.15"

# plotting
plotters = "0.3.7"

# prism
prism-common = { path = "crates/common" }
prism-storage = { path = "crates/storage" }
prism-da = { path = "crates/da" }
prism-errors = { path = "crates/errors" }
prism-cli = { path = "crates/cli" }
prism-client = { path = "crates/client" }
prism-prover = { path = "crates/node_types/prover" }
prism-tests = { path = "crates/tests" }
prism-keys = { path = "crates/keys" }
prism-serde = { path = "crates/serde" }
prism-tree = { path = "crates/tree" }
prism-lightclient = { path = "crates/node_types/lightclient" }
prism-telemetry-registry = { path = "crates/telemetry" }

# testing
mockall = "0.13.1"

# wasm
log = "0.4"
lumina-node-wasm = { git = "https://github.com/deltadevsde/lumina.git" }
wasm-bindgen = "0.2"
js-sys = "0.3"
web-sys = "0.3"
serde-wasm-bindgen = "0.6.5"
wasm-bindgen-futures = "0.4"
web-time = "1.1.0"

# telemetry
prism-telemetry = "0.2.0"
opentelemetry = "0.29.1"
opentelemetry_sdk = "0.29.0"
tracing = { version = "0.1.41", features = ["std"] }
parking_lot = "0.12.3"
lazy_static = "1.4.0"

# uniffi
uniffi = { version = "0.29.1", features = ["bindgen", "tokio", "cli"] }
lumina-node-uniffi = { git = "https://github.com/deltadevsde/lumina.git" }
blockstore = "0.7.1"

[patch.crates-io]
sha2-v0-10-8 = { git = "https://github.com/sp1-patches/RustCrypto-hashes", package = "sha2", tag = "patch-sha2-0.10.8-sp1-4.0.0" }
curve25519-dalek-ng = { git = "https://github.com/sp1-patches/curve25519-dalek-ng", tag = "patch-4.1.1-sp1-4.0.0" }
p256 = { git = "https://github.com/sp1-patches/elliptic-curves", tag = "patch-p256-13.2-sp1-4.1.0" }
k256 = { git = "https://github.com/sp1-patches/elliptic-curves", tag = "patch-k256-13.4-sp1-4.1.0" }
celestia-types = { git = "https://github.com/deltadevsde/lumina.git" }
lumina-node = { git = "https://github.com/deltadevsde/lumina.git" }

[workspace.features]
default = []
test_utils = []
